#X-Generator: crowdin.net
# BlockDrawer name

bc.angle=\u00e2ngulo
bc.base=base
bc.condition=condi\u00e7\u00e3o
bc.else=se n\u00e3o
bc.exponent=expoente
bc.from=de
bc.level=n\u00edvel
bc.max=m\u00e1ximo
bc.microseconds=microssegundos
bc.milliseconds=milissegundos
# BlockConnector label
bc.pin_number=n\u00famero do Pino
bc.status=estado
bc.test=teste
bc.then=ent\u00e3o
bc.to=at\u00e8
bc.value=valor
bc.variable=vari\u00e1vel
bc.frequency=frequ\u00eancia
bd.control=Controlo
bd.dfrobot=DFRobot
bd.number=N\u00fameros/Constantes
bd.operators=Opera\u00e7\u00f5es
bd.pins=Pinos
bd.seeedstudio=SeedStudio Grove
bd.tinkerkit=Blocos TinkerKit
bd.utilities=Utilit\u00e1rios
# BlockGenus initlabel
bg.Tinker_Accmeter=Aceler\u00f3metro
bg.Tinker_Button=Bot\u00e3o
bg.Tinker_Hall=Sensor de Hall
bg.Tinker_LDR=LDR
bg.Tinker_LED=LED
bg.Tinker_LED_pwm=LED
bg.Tinker_LinearPotentiometer=Potenci\u00f3metro Linear
bg.Tinker_Mosfet=Mosfet
bg.Tinker_Mosfet_pwm=Mosfet
bg.Tinker_Relay=Rel\u00e9
bg.Tinker_RotaryPotentiometer=Potenci\u00f3metro de Rota\u00e7\u00e3o
bg.Tinker_Servo=Servomotor
bg.Tinker_Thermistor=Termistor
bg.Tinker_Tilt=Sensor de Inclina\u00e7\u00e3o
bg.Tinker_Touch=Sensor de Toque
bg.abs=valor absoluto
bg.and=e
bg.delay=tempo de espera
bg.delay_microseconds=tempo de espera em micro segundos
bg.df_360_degree_rotation_motor=Servo alterado para Rota\u00e7\u00e3o Cont\u00ednua
bg.df_adjustable_infrared_sensor_switch=Interruptor de Infravermelhos para Dist\u00e2ncia
bg.df_analog_ambient_light_sensor=Sensor de Luz Ambiente
bg.df_analog_gas_sensor=Sensor de G\u00e1s
bg.df_analog_grayscale_sensor=Sensor de Reflex\u00e3o
bg.df_analog_rotation_sensor_v1=Sensor de Rota\u00e7\u00e3o V1
bg.df_analog_rotation_sensor_v2=Sensor de Rota\u00e7\u00e3o V2
bg.df_analog_sound_sensor=Sensor de Som
bg.df_capacitive_touch_sensor=Sensor de Toque Capacitivo
bg.df_digital_infrared_motion_sensor=Sensor Digital de Movimento
bg.df_digital_ir_receiver_module=Receptor Digital de IR
bg.df_digital_push_button=Bot\u00e3o de Toque
bg.df_digital_viberation_sensor=Sensor Digital de Vibra\u00e7\u00e3o
bg.df_flame_sensor=Sensor de Vela
bg.df_joystick_module_button=Bot\u00e3o de Joystick
bg.df_joystick_module_x=Joystick (Eixo X)
bg.df_joystick_module_y=Joystick (Eixo Y)
bg.df_led=M\u00f3dulo de LED
bg.df_led_pwm=LED com Brilho
bg.df_line_tracking_sensor=Sensor de Linha
bg.df_mma7260_x=Aceler\u00f3metro de Eixo Triplo MMA7260 (Eixo X)
bg.df_mma7260_y=Aceler\u00f3metro de Eixo Triplo MMA7260 (Eixo Y)
bg.df_mma7260_z=Aceler\u00f3metro de Eixo Triplo MMA7260 (Eixo Z)
bg.df_piranha_led=M\u00f3dulo de LED Piranha
bg.df_piranha_led_pwm=M\u00f3dulo LED com Brilho Prianha
bg.df_pizeo_disk_vibration_sensor=Sensor Piezo El\u00e9ctrico
bg.df_relay=Rel\u00e9
bg.df_servo=DFRobot Servomotor
bg.df_temperature_sensor=Sensor de Temperatura
bg.digital-high=Alto
bg.digital-low=Baixo
bg.digital-off=Desligado
bg.digital-on=Ligado
bg.equal\=\==\ \=
bg.false=Falso
bg.glue_sb=cola
bg.glue_sn=cola
bg.greater=>
bg.greater_equal=>\=
bg.if=se
bg.ifelse=se / se n\u00e3o
bg.less=<
bg.less_equal=<\=
bg.loop=Ciclo
bg.map=mapear
bg.map_common=mapear [0, 1024] para [0,255]
bg.max=m\u00e1ximo
bg.message=mensagem
bg.millis=milisegundos
bg.min=m\u00ednimo
bg.modulo=% (Resto da Divis\u00e3o Inteira)
bg.multiplication=x
bg.not=inverso
bg.not_equal=\!\= (diferente)
bg.number=1
bg.or=ou
bg.pin-read-analog=pino anal\u00f3gico
bg.pin-read-digital=pino digital
bg.pin-write-analog=definir pino anal\u00f3gico
bg.pin-write-digital=definir pino digital
bg.pow=pot\u00eancia
bg.random=aleat\u00f3rio
bg.repeat_times=repetir
bg.seeed_joystick=Grove Thumb Joystick
bg.seeed_joystick_button=Grove Thumb Joystick Bot\u00e3o
bg.serial_println=Imprime Serial (com enter)
bg.servo=Servomotor
bg.setter_variable_digital=definir vari\u00e1vel digital
bg.setter_variable_number=definir vari\u00e1vel num\u00e9rica
bg.sqrt=\u221a
bg.true=VERDADE
bg.ultrasonic=ultrassons
bg.variable_digital=nome de vari\u00e1vel digital
bg.variable_number=nome de vari\u00e1vel num\u00e9rica
bg.while=enquanto
bg.wire_isread=Leitura I2C correcta?
bg.wire_read=Ler I2C
bg.wire_write=Escrever I2C
bg.tone=tom
bg.tone_time=tom
bg.no_tone=sem tom
bg.xcj_motor_backward=Motor <br> Atr\u00e1s
bg.xcj_motor_forward=Motor <br> Frente
bg.xcj_ms_digital_read=Ler valor digital Xinchejian
bg.xcj_ms_digital_write=Escrever valor digital Xinchejian
ardublock.file.suffix=Nome do Arquivo ArduBlock (*.abp)

ardublock.ui.save=Guardar
ardublock.ui.load=Abrir
ardublock.ui.upload=Enviar
ardublock.ui.clone=Duplicar

message.title.error=Erro
message.title.question=Pergunta
message.content.open_unsaved=Programa ArduBlock alterado. Deseja guardar altera\u00e7\u00f5es?
message.content.overwrite=Deseja Substituir o ficheiro existente?
message.file_not_found=Ficheiro n\u00e3o encontrado ou sem permiss\u00e3o de acesso

