#X-Generator: crowdin.net
# BlockDrawer name

bc.angle=angle
bc.base=Base
bc.condition=Teste la condition
bc.else=Sinon \u00e9x\u00e9cute
bc.exponent=Exposant
bc.from=Fourchette de valeur actuelle
bc.level=niveau
bc.max=Nombre max
bc.microseconds=Microsecondes
bc.milliseconds=Millisecondes
# BlockConnector label
bc.pin_number=broche\#
bc.status=statut
bc.test=Teste
bc.then=Alors \u00e9xecute..
bc.to=Nouvelle fourchette de valeurs
bc.value=valeur
bc.variable=Nom de la variable
bc.frequency=fr\u00e9quence
bc.do=Faire
bd.control=Contr\u00f4les
bd.dfrobot=DFRobot
bd.number=Variables/Constantes
bd.operators=Operateurs Math
bd.pins=Broches
bd.seeedstudio=Seeedstudio Grove
bd.tinkerkit=Blocs TinkerKit
bd.utilities=Utilitaires
# BlockGenus initlabel
bg.Tinker_Accmeter=Acc\u00e9l\u00e9rom\u00e8tre
bg.Tinker_Button=Bouton
bg.Tinker_Hall=Capteur \u00e0 effet hall
bg.Tinker_I0=I0
bg.Tinker_I1=I1
bg.Tinker_I2=I2
bg.Tinker_I3=I3
bg.Tinker_I4=I4
bg.Tinker_I5=I5
bg.Tinker_LDR=Photor\u00e9sistance
bg.Tinker_LED=DEL
bg.Tinker_LED_pwm=DEL
bg.Tinker_LinearPotentiometer=Potentiom\u00e8tre rectiligne
bg.Tinker_Mosfet=Transistor de puissance
bg.Tinker_Mosfet_pwm=Transistor de puissance
bg.Tinker_O0=O0
bg.Tinker_O1=O1
bg.Tinker_O2=O2
bg.Tinker_O3=O3
bg.Tinker_O4=O4
bg.Tinker_O5=O5
bg.Tinker_Relay=Relais
bg.Tinker_RotaryPotentiometer=Potentiom\u00e8tre rotatif
bg.Tinker_Servo=Servomoteur
bg.Tinker_Thermistor=Thermistance
bg.Tinker_Tilt=Capteur d'inclinaison
bg.Tinker_Touch=Capteur sensitif
bg.abs=ABS
bg.addition=+
bg.and=ET
bg.cos=COS
bg.delay=D\u00e9lais en milliseconde
bg.delay_microseconds=D\u00e9lais en microsecondes
bg.df_360_degree_rotation_motor=Rotation du moteur de 360 degr\u00e9s
bg.df_adjustable_infrared_sensor_switch=Commutateur de capteur infrarouge r\u00e9glable
bg.df_analog_ambient_light_sensor=Capteur analogique de lumi\u00e8re ambiante
bg.df_analog_gas_sensor=Capteur analogique de gaz
bg.df_analog_grayscale_sensor=Capteur analogique de niveaux de gris
bg.df_analog_rotation_sensor_v1=Capteur analogique de rotation V1
bg.df_analog_rotation_sensor_v2=Capteur analogique de rotation V2
bg.df_analog_sound_sensor=Capteur sonore analogique
bg.df_capacitive_touch_sensor=Capteur tactile capacitif
bg.df_digital_infrared_motion_sensor=Capteur de mouvement Infrarouge digital
bg.df_digital_ir_receiver_module=R\u00e9cepteur IR num\u00e9rique
bg.df_digital_push_button=Bouton poussoir num\u00e9rique
bg.df_digital_viberation_sensor=Capteur de vibration num\u00e9rique
bg.df_flame_sensor=Capteur de flamme
bg.df_joystick_module_button=Manette de jeu (bouton poussoir)
bg.df_joystick_module_x=Manette de jeu (axe X)
bg.df_joystick_module_y=Manette de jeu (axe Y)
bg.df_led=Module DEL
bg.df_led_pwm=DEL (luminosit\u00e9)
bg.df_line_tracking_sensor=Capteur suiveur de ligne
bg.df_mma7260_x=Acc\u00e9l\u00e9rom\u00e8tre trois axes MMA7260 (axe-X)
bg.df_mma7260_y=Acc\u00e9l\u00e9rom\u00e8tre trois axes MMA7260 (axe-Y)
bg.df_mma7260_z=Acc\u00e9l\u00e9rom\u00e8tre trois axes MMA7260 (axe-Z)
bg.df_piranha_led=Module Piranha DEL
bg.df_piranha_led_pwm=Module Piranha DEL (luminosit\u00e9)
bg.df_pizeo_disk_vibration_sensor=Capteur de choc piezo
bg.df_relay=Relais
bg.df_servo=DFRobot servomoteur
bg.df_temperature_sensor=Capteur de temp\u00e9rature
bg.df_buzzer=Buzzer DFRobot
bg.df_buzzer_tone=Buzzer DFRobot
bg.df_buzzer_tone_delay=Buzzer DFRobot
bg.digital-high=HAUT
bg.digital-low=BAS
bg.digital-off=Eteint
bg.digital-on=Allum\u00e9
bg.division=\u00f7
bg.equal\=\==\=\=
bg.false=FAUX
bg.glue_sb=Coller
bg.glue_sn=Coller
bg.greater=>
bg.greater_equal=>\=
bg.if=Si
bg.ifelse=Si - Sinon
bg.less=<
bg.less_equal=<\=
bg.loop=boucle
bg.map=R\u00e9\u00e9talonne...
bg.map_common=R\u00e9\u00e9talonne de [0 \u00e0 1023] en [0 \u00e0 255]
bg.max=max
bg.message=texte
bg.millis=Temps depuis le d\u00e9marrage de la carte (millis)
bg.min=min
bg.modulo=%
bg.multiplication=x
bg.not=NON
bg.not_equal=\!\=
bg.number=1
bg.or=OU
bg.pin-read-analog=Valeur de la broche Entree Analogique
bg.pin-read-digital=Valeur de la broche Entree num\u00e9rique
bg.pin-write-analog=Fixe la sortie analogique \u00e0 la valeur \: 
bg.pin-write-digital=Fixe la sortie num\u00e9rique au niveau
bg.pow=puissance
bg.random=Nombre al\u00e9atoire
bg.repeat_times=R\u00e9p\u00e8te
bg.seeed_joystick=Mini joystick Grove
bg.seeed_joystick_button=Bouton mini joystick Grove
bg.serial_println=Ecris sur le port s\u00e9rie un message
bg.servo=Servomoteur
bg.setter_variable_digital=D\u00e9clare la variable bool\u00e9ene (HAUT ou BAS)
bg.setter_variable_number=D\u00e9clare une variable num\u00e9rique
bg.sin=Sin
bg.sqrt=Racine carr\u00e9e
bg.subtraction=-
bg.tan=tan
bg.true=VRAI
bg.ultrasonic=Capteur Ultrason
bg.variable_digital=Nom de la variable bool\u00e9ene (HAUT-BAS ou VRAI-FAUX)
bg.variable_number=Nom de la variable num\u00e9rique
bg.while=Tant que...
bg.wire_isread=Lecture I2C ok?
bg.wire_read=Lecture bus I2C
bg.wire_write=Ecriture bus I2C
bg.tone=tonalit\u00e9
bg.tone_time=tonalit\u00e9
bg.no_tone=Pas de tonalit\u00e9
bg.xcj_motor_backward=Platine moteur <br> recule
bg.xcj_motor_forward=Platine moteur <br> avance
bg.xcj_ms_digital_read=Lecture num\u00e9rique Xinchejian
bg.xcj_ms_digital_write=Ecriture num\u00e9rique Xinchejian
ardublock.file.suffix=Fichier ArduBlock (*.abp)

ardublock.ui.save=Enregistrer
ardublock.ui.load=ouvrir
ardublock.ui.upload=Transf\u00e9rer
ardublock.ui.clone=Cloner
ardublock.ui.add_comment=Ajouter un commentaire
ardublock.ui.delete_comment=Supprimer un commentaire
ardublock.ui.organize_blocks=Organiser tous les blocs

message.title.error=Erreur
message.title.question=Question
message.content.open_unsaved=Votre programme ArduBlock a chang\u00e9, voulez-vous l'enregistrer ?
message.content.overwrite=Voulez-vous \u00e9craser le fichier existant ?
message.file_not_found=Fichier non trouv\u00e9 ou autorisation refus\u00e9e

